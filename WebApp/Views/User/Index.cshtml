@model PagedList.IPagedList<WebApp.Models.User>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewBag.Title = "Users";
}
<div class="section">
	<h2>Users</h2>


	<div class="row option-bar">
		<div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
			<button disabled><i class="fa fa-th-list" disabled></i></button>
			<button disabled><i class="fa fa-th-large" disabled></i></button>
		</div>
		@using (Html.BeginForm())
		{
			<div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
				<div class="dropdown">
					<button class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-filter"></i></button>			
					<ul class="dropdown-menu">
						<li>@Html.ActionLink("User Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</li>
						<li>@Html.ActionLink("User Registered", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })</li>
					</ul>
				</div>
			</div>
			<div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
				@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
				<button type="submit"><i class="fa fa-search"></i></button>
			</div>
		}
	</div>

	<div class="row card-list">
		@foreach (var item in Model)
		{
			<div class="col-xs-12 col-sm-6 col-md-6 col-lg-4">
				<div class="card">
					@{
						var str = item.UserMetas.Where(m => m.MetaKey == "avatar").Single();
						string src = (str.MetaValue.ToString() != "" ? str.MetaValue.ToString() : "/Images/Avatar/non.jpg");

						<img src="@src" alt="" style="width:100%;" />
					}
					<div class="card-header">
						<h2>@Html.ActionLink(item.UserName, "Details", new { id = item.UserID })</h2>
					</div>
					<div class="card-content">
						<p>@Html.DisplayFor(modelItem => item.UserBio)</p>
						<p>@Html.DisplayFor(modelItem => item.Email)</p>
					</div>
					<div class="card-meta">
						<p>@Html.DisplayFor(modelItem => item.UserRelease)</p>
						@{
							if (item.Links != null || item.Links != "")
							{
								String[] result = { "", "", "", "" };
								var links = item.Links;
								links = links.Replace("\"link\":", "").Replace("{", "").Replace("}", "").Replace(":", "").Replace("[", "").Replace("]", "").Replace("\"", "");
								result = links.Split(',');

								if (result[0] != null && result[0] != "")
							{
								<span class="links fb"><a href="@result[0]"><i class="fa fa-facebook"></i></a></span>
							}
							if (result[1] != null && result[1] != "")
							{
								<span class="links yt"><a href="@result[1]"><i class="fa fa-youtube"></i></a></span>
							}
							if (result[2] != null && result[2] != "")
							{
								<span class="links ins"><a href="@result[2]"><i class="fa fa-instagram"></i></a></span>
							}
							if (result[3] != null && result[3] != "")
							{
								<span class="links web"><a href="@result[3]"><i class="fa fa-globe"></i></a></span>
							}
							}
						}
					</div>
				</div>			
			</div>
		}
	</div>

	<br />
	Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber ) of @Model.PageCount

	@Html.PagedListPager(Model, page => Url.Action("Index",
	new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
<br />